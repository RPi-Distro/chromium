We can drop this in v124, once we have
https://chromium-review.googlesource.com/c/chromium/src/+/5307601

commit cc318b731178fa93ef0ab7b18980df16aefbc56e
Author: Nick Diego Yamane <nickdiego@igalia.com>
Date:   Tue Feb 27 03:51:45 2024 +0000

    switch away from std::to_address
    

--- a/mojo/public/cpp/bindings/type_converter.h
+++ b/mojo/public/cpp/bindings/type_converter.h
@@ -95,13 +95,16 @@ inline T ConvertTo(U* obj) {
   return TypeConverter<T, std::remove_cv_t<U>*>::Convert(obj);
 }
 
+template <class T> constexpr T *clang_to_address(T *P) { return P; }
+template <class T> auto clang_to_address(const T &P) -> decltype(P.operator->()) { return P.operator->(); }
+
 template <typename T, typename U>
   requires requires(const U& obj) {
     not std::is_pointer_v<U>;
-    { mojo::ConvertTo<T>(std::to_address(obj)) } -> std::same_as<T>;
+    { mojo::ConvertTo<T>(clang_to_address(obj)) } -> std::same_as<T>;
   }
 inline T ConvertTo(const U& obj) {
-  return mojo::ConvertTo<T>(std::to_address(obj));
+  return mojo::ConvertTo<T>(clang_to_address(obj));
 }
 
 template <typename T, typename U>
