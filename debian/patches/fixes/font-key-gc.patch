Work around FontCacheKey use-after-free with gcc's libstdc++ (but not
clang's libc++). This is from
https://chromium-review.googlesource.com/c/chromium/src/+/5623370
Not suitable for upstream, but unfortuantely upstream has decided
to fix the bug (https://issues.chromium.org/issues/346174906) by
just doing a bunch of ASAN-specific workarounds and ignoring the
root problem. So..yeah.

The fact that it affects libstdc++ is filed upstream at
https://issues.chromium.org/issues/342778288 , but I don't think
they're gonna fix it.

--- a/third_party/blink/renderer/platform/wtf/hash_table.h
+++ b/third_party/blink/renderer/platform/wtf/hash_table.h
@@ -1574,7 +1574,7 @@ void HashTable<Key, Value, Extractor, Tr
       // enough to call the destructor, since we will free the memory
       // explicitly and we won't see the memory with the bucket again.
       if (Allocator::kIsGarbageCollected) {
-        if (!IsEmptyOrDeletedBucket(table[i]))
+        if (!IsDeletedBucket(table[i]))
           DeleteBucket(table[i]);
       } else {
         if (!IsDeletedBucket(table[i]))
@@ -1639,6 +1639,9 @@ HashTable<Key, Value, Extractor, Traits,
       DCHECK_NE(&table_[i], entry);
       // All entries are initially empty. See AllocateTable().
       DCHECK(IsEmptyBucket(temporary_table[i]));
+      if (IsEmptyBucket(temporary_table[i])) {
+        table_[i].~ValueType();
+      }
     } else {
       Mover<ValueType, Allocator, Traits,
             Traits::template NeedsToForbidGCOnMove<>::value>::
