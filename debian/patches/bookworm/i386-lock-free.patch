author: Andres Salomon <dilinger@debian.org>

Clang less than v15 has issues with
std:atomic<uint64_t>::is_always_lock_free on i386 (and only on i386).
On 15 and above, it's true, but below that it is false. So instead,
rely on a runtime is_lock_free() check.

Index: chromium-118.0.5993.54/services/network/restricted_cookie_manager.cc
===================================================================
--- chromium-118.0.5993.54.orig/services/network/restricted_cookie_manager.cc
+++ chromium-118.0.5993.54/services/network/restricted_cookie_manager.cc
@@ -4,6 +4,7 @@
 
 #include "services/network/restricted_cookie_manager.h"
 
+#include <cassert>
 #include <cstdint>
 #include <memory>
 #include <utility>
@@ -351,6 +352,8 @@ RestrictedCookieManager::RestrictedCooki
   DCHECK(cookie_store);
   DCHECK(!cookie_setting_overrides_.Has(
       net::CookieSettingOverride::kStorageAccessGrantEligible));
+  SharedVersionType svt;
+  assert(svt.is_lock_free() && "SharedVersionType must be lock free!");
   if (role == mojom::RestrictedCookieManagerRole::SCRIPT) {
       CHECK(origin_.IsSameOriginWith(isolation_info_.frame_origin().value()));
   }
Index: chromium-118.0.5993.54/services/network/restricted_cookie_manager.h
===================================================================
--- chromium-118.0.5993.54.orig/services/network/restricted_cookie_manager.h
+++ chromium-118.0.5993.54/services/network/restricted_cookie_manager.h
@@ -182,8 +182,6 @@ class COMPONENT_EXPORT(NETWORK_SERVICE)
 
  private:
   using SharedVersionType = std::atomic<uint64_t>;
-  static_assert(SharedVersionType::is_always_lock_free,
-                "Usage of SharedVersionType across processes might be unsafe");
 
   // Function to be called when an event is known to potentially invalidate
   // cookies the other side could have cached.
