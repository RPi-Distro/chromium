author: Andres Salomon <dilinger@debian.org>
description: hopefully work around FTBFS on clang-13 under armhf & i386

We see the following on 32bit platforms on older clang:

ld.lld-13: error: undefined symbol: __mulodi4
>>> referenced by const_eval.cc

This is a shim that's used elsewhere in third party libraries. V8 has
a different implementation. Not sure if this is worth sending upstream
or not, we're not seeing it on clang-14.


--- a/third_party/dawn/src/tint/BUILD.gn
+++ b/third_party/dawn/src/tint/BUILD.gn
@@ -607,6 +607,15 @@ libtint_source_set("libtint_core_all_src
   } else {
     sources += [ "diagnostic/printer_other.cc" ]
   }
+
+  if (current_cpu == "x86" || current_cpu == "arm") {
+    # dawn uses __builtin_smulll_overflow() to detect 64x64 bit multiply overflow.
+    # On 32-bit platforms, the compiler implements this with __mulodi4().
+    # I can't quite figure out how to link that here, so instead here's a shim for
+    # __builtin_smulll_overflow() that multiplies normally assuming no overflow.
+    # Tracked in b/29412086.
+    defines += [ "__builtin_smulll_overflow(x,y,p)=(*(p)=(x)*(y), false)" ]
+  }
 }
 
 libtint_source_set("libtint_sem_src") {
