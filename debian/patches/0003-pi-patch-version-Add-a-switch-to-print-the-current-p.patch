From 86f748eda10935a6b74fd9d7268a5b182b044268 Mon Sep 17 00:00:00 2001
From: John Cox <jc@kynesim.co.uk>
Date: Fri, 17 May 2024 14:39:17 +0100
Subject: [PATCH 03/17] pi-patch-version: Add a switch to print the current pi
 patch version

---
 chrome/app/chrome_main_delegate.cc                | 10 ++++++++++
 chrome/common/chrome_switches.cc                  |  3 +++
 chrome/common/chrome_switches.h                   |  1 +
 components/version_info/BUILD.gn                  |  3 +++
 components/version_info/pi_patch_version_info.cc  | 11 +++++++++++
 components/version_info/pi_patch_version_info.h   | 12 ++++++++++++
 components/version_info/pi_patch_version_values.h |  2 ++
 7 files changed, 42 insertions(+)
 create mode 100644 components/version_info/pi_patch_version_info.cc
 create mode 100644 components/version_info/pi_patch_version_info.h
 create mode 100644 components/version_info/pi_patch_version_values.h

--- a/src/chrome/app/chrome_main_delegate.cc
+++ b/src/chrome/app/chrome_main_delegate.cc
@@ -74,6 +74,7 @@
 #include "components/nacl/common/buildflags.h"
 #include "components/startup_metric_utils/common/startup_metric_utils.h"
 #include "components/version_info/channel.h"
+#include "components/version_info/pi_patch_version_info.h"
 #include "components/version_info/version_info.h"
 #include "content/public/app/initialize_mojo_core.h"
 #include "content/public/common/content_client.h"
@@ -414,6 +415,15 @@ bool HandleVersionSwitches(const base::C
   }
 #endif
 
+  if (command_line.HasSwitch(switches::kPiPatchVersion)) {
+    printf("%s %s %s\nPi patch: %s\n",
+           version_info::GetProductName().data(),
+           version_info::GetVersionNumber().data(),
+           chrome::GetChannelName(chrome::WithExtendedStable(true)).c_str(),
+           version_info::GetPiPatchVersionString().c_str());
+    return true;
+  }
+
   if (command_line.HasSwitch(switches::kVersion)) {
     printf("%s %s %s\n", version_info::GetProductName().data(),
            version_info::GetVersionNumber().data(),
--- a/src/chrome/common/chrome_switches.cc
+++ b/src/chrome/common/chrome_switches.cc
@@ -461,6 +461,9 @@ const char kPackExtensionKey[] = "pack-e
 // crashpad (or breakpad) is initialized.
 const char kPreCrashpadCrashTest[] = "pre-crashpad-crash-test";
 
+// Print the patch version and return
+const char kPiPatchVersion[] = "pi-patch-version";
+
 // Used to mock the response received from the Web Permission Prediction
 // Service. Used for testing.
 const char kPredictionServiceMockLikelihood[] =
--- a/src/chrome/common/chrome_switches.h
+++ b/src/chrome/common/chrome_switches.h
@@ -147,6 +147,7 @@ extern const char kOnTheFlyMhtmlHashComp
 extern const char kOpenInNewWindow[];
 extern const char kPackExtension[];
 extern const char kPackExtensionKey[];
+extern const char kPiPatchVersion[];
 extern const char kPreCrashpadCrashTest[];
 extern const char kPredictionServiceMockLikelihood[];
 extern const char kPreinstalledWebAppsDir[];
--- a/src/components/version_info/BUILD.gn
+++ b/src/components/version_info/BUILD.gn
@@ -10,6 +10,9 @@ source_set("version_info") {
   sources = [
     "version_info.h",
     "version_info_values.h",
+    "pi_patch_version_info.cc",
+    "pi_patch_version_info.h",
+    "pi_patch_version_values.h",
   ]
   public_deps = [
     ":channel",
--- /dev/null
+++ b/src/components/version_info/pi_patch_version_info.cc
@@ -0,0 +1,11 @@
+#include "components/version_info/pi_patch_version_info.h"
+#include "components/version_info/pi_patch_version_values.h"
+
+namespace version_info {
+
+std::string GetPiPatchVersionString() {
+  return PI_PATCH_VERSION_STRING;
+}
+
+}  // namespace version_info
+
--- /dev/null
+++ b/src/components/version_info/pi_patch_version_info.h
@@ -0,0 +1,12 @@
+#ifndef COMPONENTS_PI_PATCH_VERSION_INFO_VERSION_INFO_H_
+#define COMPONENTS_PI_PATCH_VERSION_INFO_VERSION_INFO_H_
+
+#include <string>
+
+namespace version_info {
+
+// Returns a string with the patch tag for our patches
+std::string GetPiPatchVersionString();
+
+}  // namespace version_info
+#endif  // COMPONENTS_VERSION_INFO_VERSION_INFO_H_
--- /dev/null
+++ b/src/components/version_info/pi_patch_version_values.h
@@ -0,0 +1,2 @@
+// Pi patch version - generated by pi-util/settag.py
+#define PI_PATCH_VERSION_STRING "rpi_3.67"
