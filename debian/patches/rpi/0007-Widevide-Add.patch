From 31c48b7d3d1966a33b76ace90b4c049288f784cf Mon Sep 17 00:00:00 2001
From: John Cox <jc@kynesim.co.uk>
Date: Mon, 20 May 2024 16:36:39 +0100
Subject: [PATCH 07/17] Widevide: Add

---
 chrome/common/chrome_paths.cc           | 4 ++++
 chrome/common/media/cdm_registration.cc | 8 +++-----
 third_party/widevine/cdm/widevine.gni   | 2 +-
 3 files changed, 8 insertions(+), 6 deletions(-)

--- a/chrome/common/chrome_paths.cc
+++ b/chrome/common/chrome_paths.cc
@@ -410,6 +410,10 @@ bool PathProvider(int key, base::FilePat
 
 #if BUILDFLAG(ENABLE_WIDEVINE)
     case chrome::DIR_BUNDLED_WIDEVINE_CDM:
+      cur = base::FilePath(FILE_PATH_LITERAL("/opt"));
+      cur = cur.Append(kWidevineCdmBaseDirectory);
+      if (base::PathExists(cur))
+        break;
       if (!GetComponentDirectory(&cur)) {
         return false;
       }
--- a/chrome/common/media/cdm_registration.cc
+++ b/chrome/common/media/cdm_registration.cc
@@ -84,9 +84,7 @@ void ReportLacrosUMA(LacrosBundledWidevi
 }
 #endif  // BUILDFLAG(IS_CHROMEOS_LACROS)
 
-#if (BUILDFLAG(BUNDLE_WIDEVINE_CDM) ||            \
-     BUILDFLAG(ENABLE_WIDEVINE_CDM_COMPONENT)) && \
-    (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS))
+#if BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)
 // Create a CdmInfo for a Widevine CDM, using |version|, |cdm_library_path|, and
 // |capability|.
 std::unique_ptr<content::CdmInfo> CreateWidevineCdmInfo(
@@ -130,7 +128,7 @@ std::unique_ptr<content::CdmInfo> Create
         // BUILDFLAG(ENABLE_WIDEVINE_CDM_COMPONENT)) && (BUILDFLAG(IS_LINUX) ||
         // BUILDFLAG(IS_CHROMEOS))
 
-#if BUILDFLAG(BUNDLE_WIDEVINE_CDM) && \
+#if BUILDFLAG(ENABLE_WIDEVINE) && \
     (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS))
 // On Linux/ChromeOS we have to preload the CDM since it uses the zygote
 // sandbox. On Windows and Mac, CDM registration is handled by Component
@@ -270,7 +268,7 @@ void AddSoftwareSecureWidevine(std::vect
   std::unique_ptr<content::CdmInfo> bundled_widevine = nullptr;
 #if BUILDFLAG(IS_CHROMEOS_LACROS)
   bundled_widevine = GetAshBundledWidevine();
-#elif BUILDFLAG(BUNDLE_WIDEVINE_CDM)
+#elif BUILDFLAG(ENABLE_WIDEVINE)
   bundled_widevine = GetBundledWidevine();
 #endif
 
--- a/third_party/widevine/cdm/widevine.gni
+++ b/third_party/widevine/cdm/widevine.gni
@@ -27,7 +27,7 @@ if (is_chromeos && !is_chromeos_device)
 library_widevine_cdm_available =
     (is_chromeos &&
      (target_cpu == "x64" || target_cpu == "arm" || target_cpu == "arm64")) ||
-    (target_os == "linux" && target_cpu == "x64") ||
+    (target_os == "linux" && (target_cpu == "x64" || target_cpu == "arm")) ||
     (target_os == "mac" && (target_cpu == "x64" || target_cpu == "arm64")) ||
     (target_os == "win" &&
      (target_cpu == "x86" || target_cpu == "x64" || target_cpu == "arm64"))
